# Generated by Django 2.0.2 on 2018-03-13 19:02

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso', models.CharField(max_length=2, unique=True)),
                ('name', models.CharField(default='', max_length=60)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name_plural': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room', models.CharField(choices=[('PS', 'PokerStars')], default='PS', max_length=3)),
                ('name', models.CharField(max_length=20)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic.Country')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerScan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entries', models.SmallIntegerField(default=1)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scans', to='traffic.Player')),
            ],
        ),
        migrations.CreateModel(
            name='Scan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full', models.BooleanField(default=True)),
                ('start_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('room', models.CharField(choices=[('PS', 'PokerStars')], default='PS', max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Scanner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room', models.CharField(choices=[('PS', 'PokerStars')], default='PS', max_length=3)),
                ('name', models.CharField(max_length=15)),
                ('game', models.CharField(choices=[('NL', "NL Hold'em"), ('PLO', 'PL Omaha'), ('PLO8', 'PL Omaha H/L'), ('NLO8', 'NL Omaha H/L')], default='NL', max_length=4)),
                ('limit', models.IntegerField(default=0)),
                ('max_players', models.IntegerField(default=6)),
            ],
        ),
        migrations.CreateModel(
            name='TableScan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(blank=True, db_index=True, default=django.utils.timezone.now)),
                ('player_count', models.SmallIntegerField(default=0)),
                ('average_pot', models.FloatField(default=0.0)),
                ('players_per_flop', models.SmallIntegerField(default=0)),
                ('unique_player_count', models.SmallIntegerField(default=0)),
                ('entry_count', models.SmallIntegerField(default=0)),
                ('one_tabler_count', models.SmallIntegerField(default=0)),
                ('two_tabler_count', models.SmallIntegerField(default=0)),
                ('three_tabler_count', models.SmallIntegerField(default=0)),
                ('four_tabler_count', models.SmallIntegerField(default=0)),
                ('scan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='table_scans', to='traffic.Scan')),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='table_scans', to='traffic.Table')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='table',
            unique_together={('room', 'name')},
        ),
        migrations.AddField(
            model_name='scan',
            name='scanner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scans', to='traffic.Scanner'),
        ),
        migrations.AddField(
            model_name='playerscan',
            name='table_scan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='traffic.TableScan'),
        ),
        migrations.AddIndex(
            model_name='tablescan',
            index=models.Index(fields=['datetime'], name='traffic_tab_datetim_7c804b_idx'),
        ),
        migrations.AddIndex(
            model_name='playerscan',
            index=models.Index(fields=['entries'], name='traffic_pla_entries_71c04b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='player',
            unique_together={('room', 'name')},
        ),
    ]
